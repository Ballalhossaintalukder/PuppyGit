{
  "formatVersion": 1,
  "database": {
    "version": 23,
    "identityHash": "2aa47e71b4b536dc525ed1d4c5f99a53",
    "entities": [
      {
        "tableName": "repo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `repoName` TEXT NOT NULL, `fullSavePath` TEXT NOT NULL, `pullRemoteName` TEXT NOT NULL, `pullRemoteUrl` TEXT NOT NULL, `pushRemoteName` TEXT NOT NULL, `pushRemoteUrl` TEXT NOT NULL, `lastUpdateTime` INTEGER NOT NULL, `workStatus` INTEGER NOT NULL, `branch` TEXT NOT NULL, `lastCommitHash` TEXT NOT NULL, `isDetached` INTEGER NOT NULL, `upstreamBranch` TEXT NOT NULL, `hasUncheckedErr` INTEGER NOT NULL, `latestUncheckedErrMsg` TEXT NOT NULL, `credentialIdForClone` TEXT NOT NULL, `cloneUrl` TEXT NOT NULL, `isActive` INTEGER NOT NULL, `createBy` INTEGER NOT NULL, `isRecursiveCloneOn` INTEGER NOT NULL, `createErrMsg` TEXT NOT NULL, `depth` INTEGER NOT NULL, `isShallow` INTEGER NOT NULL, `isSingleBranch` INTEGER NOT NULL, `parentRepoId` TEXT NOT NULL, `ahead` INTEGER NOT NULL, `behind` INTEGER NOT NULL, `storageDirId` TEXT NOT NULL, `tmpStatus` TEXT NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repoName",
            "columnName": "repoName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullSavePath",
            "columnName": "fullSavePath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pullRemoteName",
            "columnName": "pullRemoteName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pullRemoteUrl",
            "columnName": "pullRemoteUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushRemoteName",
            "columnName": "pushRemoteName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushRemoteUrl",
            "columnName": "pushRemoteUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdateTime",
            "columnName": "lastUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workStatus",
            "columnName": "workStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "branch",
            "columnName": "branch",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastCommitHash",
            "columnName": "lastCommitHash",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isDetached",
            "columnName": "isDetached",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "upstreamBranch",
            "columnName": "upstreamBranch",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "hasUncheckedErr",
            "columnName": "hasUncheckedErr",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "latestUncheckedErrMsg",
            "columnName": "latestUncheckedErrMsg",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "credentialIdForClone",
            "columnName": "credentialIdForClone",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "cloneUrl",
            "columnName": "cloneUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createBy",
            "columnName": "createBy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isRecursiveCloneOn",
            "columnName": "isRecursiveCloneOn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createErrMsg",
            "columnName": "createErrMsg",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "depth",
            "columnName": "depth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isShallow",
            "columnName": "isShallow",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isSingleBranch",
            "columnName": "isSingleBranch",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentRepoId",
            "columnName": "parentRepoId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ahead",
            "columnName": "ahead",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "behind",
            "columnName": "behind",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "storageDirId",
            "columnName": "storageDirId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "tmpStatus",
            "columnName": "tmpStatus",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "error",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `date` TEXT NOT NULL, `msg` TEXT NOT NULL, `repoId` TEXT NOT NULL, `isChecked` INTEGER NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "msg",
            "columnName": "msg",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repoId",
            "columnName": "repoId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isChecked",
            "columnName": "isChecked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "credential",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `value` TEXT NOT NULL, `pass` TEXT NOT NULL, `type` INTEGER NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pass",
            "columnName": "pass",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "remote",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `remoteName` TEXT NOT NULL, `remoteUrl` TEXT NOT NULL, `isForPull` INTEGER NOT NULL, `isForPush` INTEGER NOT NULL, `credentialId` TEXT NOT NULL, `repoId` TEXT NOT NULL, `fetchMode` INTEGER NOT NULL, `singleBranch` TEXT NOT NULL, `customBranches` TEXT NOT NULL, `pushUrl` TEXT NOT NULL, `pushCredentialId` TEXT NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remoteName",
            "columnName": "remoteName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remoteUrl",
            "columnName": "remoteUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isForPull",
            "columnName": "isForPull",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isForPush",
            "columnName": "isForPush",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "credentialId",
            "columnName": "credentialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "repoId",
            "columnName": "repoId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fetchMode",
            "columnName": "fetchMode",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "singleBranch",
            "columnName": "singleBranch",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "customBranches",
            "columnName": "customBranches",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushUrl",
            "columnName": "pushUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pushCredentialId",
            "columnName": "pushCredentialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "settings",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`usedFor` INTEGER NOT NULL, `jsonVal` TEXT NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`usedFor`))",
        "fields": [
          {
            "fieldPath": "usedFor",
            "columnName": "usedFor",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "jsonVal",
            "columnName": "jsonVal",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "usedFor"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "passEncrypt",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `ver` INTEGER NOT NULL, `reserve1` TEXT NOT NULL, `reserve2` TEXT NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ver",
            "columnName": "ver",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reserve1",
            "columnName": "reserve1",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "reserve2",
            "columnName": "reserve2",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "storageDir",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT NOT NULL, `fullPath` TEXT NOT NULL, `type` INTEGER NOT NULL, `allowDel` INTEGER NOT NULL, `parentId` TEXT NOT NULL, `virtualPath` TEXT NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullPath",
            "columnName": "fullPath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allowDel",
            "columnName": "allowDel",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "virtualPath",
            "columnName": "virtualPath",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "domain_credential",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `domain` TEXT NOT NULL, `credentialId` TEXT NOT NULL, `baseStatus` INTEGER NOT NULL, `baseCreateTime` INTEGER NOT NULL, `baseUpdateTime` INTEGER NOT NULL, `baseIsDel` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "domain",
            "columnName": "domain",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "credentialId",
            "columnName": "credentialId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseStatus",
            "columnName": "baseStatus",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseCreateTime",
            "columnName": "baseCreateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseUpdateTime",
            "columnName": "baseUpdateTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "baseFields.baseIsDel",
            "columnName": "baseIsDel",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '2aa47e71b4b536dc525ed1d4c5f99a53')"
    ]
  }
}